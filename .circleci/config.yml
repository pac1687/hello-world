# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
defaults: &defaults
  docker:
      - image: circleci/node:13.8.0
commands:
  print_pipeline_id:
    description: "Prints the Circle CI Workflow ID"
    steps:
      - run: echo $CIRCLE_WORKFLOW_ID
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Prints "hello"
          command: echo hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Prints "world"
          command: echo world
  print_name:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Prints my_name environment variable
          command: echo $MY_NAME
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: Output 'hello world' to a file called output.txt
          command: echo "hello world" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Prints content of output.txt from workspace
          command: cat ~/output.txt
  print_pipeline_id:
    <<: *defaults
    steps:
      - print_pipeline_id
  test_on_fail:
    <<: *defaults
    steps:
      - run: return 1
      - run:
          command: echo "A step failed!"
          when: on_fail
    
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      # - save_hello_world_output
      # - print_output_file:
      #     requires:
      #       - save_hello_world_output
      - print_pipeline_id


